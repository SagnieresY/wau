<br>
<div class="white-info-parent-flex">
  <div class="container-home-info-box">
    <div class="white-info-child-box">
      <div class="big-number-green"> <%= current_user.organisation.completed_investments.count %> / <%= current_user.organisation.investments.count %></div>
      <div class="small-text-gray">  <%= t(".info_bar.title_left") %> </div>
    </div>
    <div class="white-info-child-box">
      <div class="big-number-green"><%= nice_money(current_user.organisation.amount_unlocked) %></div>
      <div class="small-text-gray"> <%= t(".info_bar.title_mid") %>  </div>
    </div>
    <div class="white-info-child-box">
      <div class="big-number-green"> <%= nice_money(current_user.organisation.amount_for_year) %></div>
      <div class="small-text-gray"> <%= t(".info_bar.title_right") %> </div>
    </div>
  </div>
</div>

<div class="mid-title-box">
  <div class="mid-title-flex">
    <div class="title-mid-home-page-text">
      <h3><%= t(".mid_section.title") %></h3>
    </div>
    <div class="mid-title-button-right grow">
      <%= link_to new_investment_path, { class: "mid-title-button-body" } do %>
      <%= t(".mid_section.button") %>
      <% end %>
    </div>
  </div>
</div>

<%= smart_listing_render(:investments) %>


<%= content_for(:after_js) do %>
<script type="text/javascript">

    $("table").tablesorter();

  function openCity(evt, cityName) {
    // Declare all variables
    var i, tabcontent, tablinks;

    // Get all elements with class="tabcontent" and hide them
    tabcontent = document.getElementsByClassName("tabcontent");
    for (i = 0; i < tabcontent.length; i++) {
        tabcontent[i].style.display = "none";
    }

    // Get all elements with class="tablinks" and remove the class "active"
    tablinks = document.getElementsByClassName("tablinks");
    for (i = 0; i < tablinks.length; i++) {
        tablinks[i].className = tablinks[i].className.replace(" active", "");
    }

    // Show the current tab, and add an "active" class to the button that opened the tab
    document.getElementById(cityName).style.display = "block";
    evt.currentTarget.className += " active";
  }
  document.getElementById("active-tab").click();

  function searchActive() {
  // Declare variables
    var input, filter, table, tr, td, i;
    input = document.getElementById("searchBarActive");
    filter = input.value.toUpperCase();
    table = document.getElementById("activeTable");
    tr = table.getElementsByTagName("tr");

    // Loop through all table rows, and hide those who don't match the search query
    for (i = 0; i < tr.length; i++) {
      td = tr[i].getElementsByTagName("td")[0];
      td2 = tr[i].getElementsByTagName("td")[1];
      if (td || td2) {
        if (td.innerHTML.toUpperCase().indexOf(filter) > -1 || td2.innerHTML.toUpperCase().indexOf(filter) > -1 ) {
          tr[i].style.display = "";
        } else {
          tr[i].style.display = "none";
        }
      }
    }
  }

  function searchCompleted() {
  // Declare variables
    var input, filter, table, tr, td, i;
    input = document.getElementById("searchBarCompleted");
    filter = input.value.toUpperCase();
    table = document.getElementById("completedTable");
    tr = table.getElementsByTagName("tr");

    // Loop through all table rows, and hide those who don't match the search query
    for (i = 0; i < tr.length; i++) {
      td = tr[i].getElementsByTagName("td")[0];
      td2 = tr[i].getElementsByTagName("td")[1];
      if (td || td2) {
        if (td.innerHTML.toUpperCase().indexOf(filter) > -1 || td2.innerHTML.toUpperCase().indexOf(filter) > -1 ) {
          tr[i].style.display = "";
        } else {
          tr[i].style.display = "none";
        }
      }
    }
  }


</script>
<% end %>
