<br>
<div class="white-info-parent-flex">
  <div class="container-home-info-box">
    <div class="white-info-child-box">
      <div class="big-number-green"> <%= current_user.organisation.completed_investments.count %> / <%= current_user.organisation.investments.count %></div>
      <div class="small-text-gray">  <%= t(".info_bar.title_left") %> </div>
    </div>
    <div class="white-info-child-box">
      <div class="big-number-green"><%= nice_money(current_user.organisation.amount_unlocked) %></div>
      <div class="small-text-gray"> <%= t(".info_bar.title_mid") %>  </div>
    </div>
    <div class="white-info-child-box">
      <div class="big-number-green"> <%= nice_money(current_user.organisation.amount_for_year) %></div>
      <div class="small-text-gray"> <%= t(".info_bar.title_right") %> </div>
    </div>
  </div>
</div>

<div class="mid-title-box">
  <div class="mid-title-flex">
    <div class="title-mid-home-page-text">
      <h3><%= t(".mid_section.title") %></h3>
    </div>
    <div class="mid-title-button-right grow">
      <%= link_to new_investment_path, { class: "mid-title-button-body" } do %>
      <%= t(".mid_section.button") %>
      <% end %>
    </div>
  </div>
</div>


<div class="flex-tab">
  <%=  link_to t(".table.tab.title_one"), active_investments_path, remote: true, method: :post,id: "active-tab", class: "tablinks active", :onclick =>  'openTab(event, "active")' %>
  <%=  link_to t(".table.tab.title_two"), completed_investments_path, remote: true, method: :post, id: "completed-tab", class: "tablinks inactive", :onclick =>  'openTab(event, "completed")'%>
</div>

<button type="button" id="button">Advanced Search</button>

<div id="index-tables">
  <%= render partial: "index_active_table"  %>
</div>

<%= content_for(:after_js) do %>
<script type="text/javascript">

  // Hides on load the advanced search -- table sorter row
  $(document).ready(function() {
    $('tr[role="search"]').hide();
  });

  // Toggles the advanced search button to show -- table sorter row
  $("button").click(function(){
      $('tr[role="search"]').toggle()
  });


  function openTab(evt, tabName) {
    // Declare all variables
    var i, tabcontent, tablinks;

    // Get all elements with class="tabcontent" and hide them
    tabcontent = document.getElementsByClassName("tabcontent");
    for (i = 0; i < tabcontent.length; i++) {
        tabcontent[i].style.display = "none";
    }

    // Get all elements with class="tablinks" and remove the class "active"
    tablinks = document.getElementsByClassName("tablinks");
    for (i = 0; i < tablinks.length; i++) {
        tablinks[i].className = tablinks[i].className.replace(" active", "");
    }

    // Show the current tab, and add an "active" class to the button that opened the tab
    document.getElementById(tabName).style.display = "block";
    evt.currentTarget.className += " active";
  }

  // Selects the tab of active investments on load
  // document.getElementById("active-tab").click();


  // Defines the search bar of the active investment table
  function searchActive() {
  // Declare variables
    var input, filter, table, tr, td, i;
    input = document.getElementById("searchBarActive");
    filter = input.value.toUpperCase();
    table = document.getElementById("activeTable");
    tr = table.getElementsByTagName("tr");

    // Loop through all table rows, and hide those who don't match the search query
    for (i = 0; i < tr.length; i++) {
      td = tr[i].getElementsByTagName("td")[0];
      td2 = tr[i].getElementsByTagName("td")[1];
      if (td || td2) {
        if (td.innerHTML.toUpperCase().indexOf(filter) > -1 || td2.innerHTML.toUpperCase().indexOf(filter) > -1 ) {
          tr[i].style.display = "";
        } else {
          tr[i].style.display = "none";
        }
      }
    }
  }

  // Defines the search bar of the completed investment table
  function searchCompleted() {
  // Declare variables
    var input, filter, table, tr, td, i;
    input = document.getElementById("searchBarCompleted");
    filter = input.value.toUpperCase();
    table = document.getElementById("completedTable");
    tr = table.getElementsByTagName("tr");

    // Loop through all table rows, and hide those who don't match the search query
    for (i = 0; i < tr.length; i++) {
      td = tr[i].getElementsByTagName("td")[0];
      td2 = tr[i].getElementsByTagName("td")[1];
      if (td || td2) {
        if (td.innerHTML.toUpperCase().indexOf(filter) > -1 || td2.innerHTML.toUpperCase().indexOf(filter) > -1 ) {
          tr[i].style.display = "";
        } else {
          tr[i].style.display = "none";
        }
      }
    }
  }



  // call the tablesorter plugin
  $('table').tablesorter({
    theme: 'blue',
    widgets: ["filter"],
    widgetOptions : {
      // filter_anyMatch replaced! Instead use the filter_external option
      // Set to use a jQuery selector (or jQuery object) pointing to the
      // external filter (column specific or any match)
      filter_external : '.search',
      // add a default type search to the first name column
      filter_defaultFilter: { 1 : '~{query}' },
      // include column filters
      filter_columnFilters: true,
      filter_placeholder: { search : 'Search...' },
      filter_saveFilters : true,
      filter_reset: '.reset'
    }
  });

</script>
<% end %>
