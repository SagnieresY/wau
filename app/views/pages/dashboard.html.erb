<%= params[:ngo]%>



<div class=home-wrapper>
   <div class="white-info-parent-flex">
      <div class="container-home-info-box">
         <div id="investment_count_home" class="white-info-child-box">
            <%= render partial: "/partials/investment_count_home" %>
         </div>
         <div id="unlocked-amount" class="white-info-child-box">
            <%= render partial: "/partials/total_unlocked_home" %>
         </div>
         <div id="forecasted-amount" class="white-info-child-box">
            <%= render partial: "/partials/forecasted_amount_home" %>
         </div>
      </div>
   </div>
</div>
<br>
<br>
<button onclick="toggleFocusSearch()">toggle focus search</button>
<div id="focus-search-wrapper" style="display:none;">
   <div id="containerFocus">
      <input type="text" id="searchFocus">
      <ul id="resultsFocus">
      </ul>
   </div>
   <h2>selected focus <a onclick="resetFocusSelection();">reset</a></h2>
   <div id="selected-focus"></div>
   <button onclick="searchFocus();">search focus</button>
</div>
<br>
<br>
<button onclick="toggleNgoSearch();">toggle ngo search</button>
<div id="ngo-search-wrapper" style="display:none;">
   <div id="containerNgo">
      <input type="text" id="searchNgo">
      <ul id="resultsNgo">
      </ul>
   </div>
   <h2>selected Ngo <a onclick="resetNgoSelection();">reset</a></h2>
   <div id="selected-ngo"></div>
   <button onclick="searchNgo();">search Ngo</button>
</div>


<%=  content_for(:after_js) do %>
<script>
const focusWrapper = document.getElementById('focus-search-wrapper')
const inputFocus = document.getElementById('searchFocus');
const resultsFocus = document.getElementById('resultsFocus');
const selectedFocusContainer = document.getElementById('selected-focus')
let selectedFocus = []

function toggleFocusSearch(){
  focusWrapper.style.display = focusWrapper.style.display === 'none' ? '' : 'none';
};

function clearSearchFocus() {
  resultsFocus.childNodes.forEach((child) => {
    child.remove();
  });
}

function addSuggestionFocus(suggestion) {
  resultsFocus.insertAdjacentHTML('afterbegin', `<li onclick="addFocus('${suggestion}');">${suggestion}</li>`);
}

function addFocus(focus) {
  if ((selectedFocus.indexOf(focus) == -1)){
  selectedFocusContainer.insertAdjacentHTML('afterbegin', `<h4>${focus}  <h4> `)
  selectedFocus.push(focus)
  }
};
function resetFocusSelection(){
  selectedFocus = []
  selectedFocusContainer.childNodes.forEach(function(item){
    item.remove()
  });
};

function searchFocus(){
  let focus_areas = ''
  selectedFocus.forEach((single_focus) => focus_areas += `${single_focus.replace("&","and")},`)
  console.log(focus_areas)
  window.location.replace(`/dashboard/?focus_area=${focus_areas}`);
};
function fetchInfoFocus() {
  clearSearchNgo();
  clearSearchFocus();
  const inputValue = inputFocus.value;
  $.ajax({
  url: `<%= '/fr' if params["locale"] == "fr" %>/focus_area/${inputValue}`,
  type: 'GET',
  dataType: 'json',
  beforeSend: function (xhr) {
      xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'));
  },
  success: function(data){data.results.forEach((word) => addSuggestionFocus(word)); },
  error: function(xhr, status, response) {console.log(xhr)}
});
}
document.addEventListener('keyup', fetchInfoFocus);


</script>
<% end %>
